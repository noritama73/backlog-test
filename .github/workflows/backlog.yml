name: Synchronize backlog status with PR

on:
  pull_request:
    types:
      - opened 
      - closed

env:
  BACKLOG_KEY: ${{ secrets.BACKLOG_KEY }}
  BACKLOG_BASE_URL: https://noritama73.backlog.com

jobs:
  get-ticket-name:
    runs-on: ubuntu-latest
    steps:
      - name: Get Project Name
        run: |
          PROJECT_ID=`echo ${{ github.event.pull_request.title }} | sed -e 's/.*<\(.*\)-[0-9]*>.*/\1/'`
          ISSUE_ID=`echo ${{ github.event.pull_request.title }} | sed -e 's/.*<\(.*-[0-9]*\)>.*/\1/'`
          echo ${PROJECT_ID}
          echo ${ISSUE_ID}
          echo "project_id=`echo ${PROJECT_ID}`" >> $GITHUB_OUTPUT
          echo "issue_id=`echo ${ISSUE_ID}`" >> $GITHUB_OUTPUT

  get-status-list:
    runs-on: ubuntu-latest
    needs:
      - get-ticket-name
    steps:
      - name: Get Status List
        run: |
          LIST_JSON=`curl ${{ env.BACKLOG_BASE_URL }}/api/v2/projects/${{ needs.get-ticket-name.outputs.project_id }}/statuses?apiKey=${{ env.BACKLOG_KEY }}`
          PENDING_STATUS_ID=`echo ${LIST_JSON} | jq '.[] | select(.name == "処理中") | .id'`
          echo "pending_status_id=`echo ${PENDING_STATUS_ID}" >> $GITHUB_OUTPUT
          FINISHED_STATUS_ID=`echo ${LIST_JSON} | jq '.[] | select(.name == "完了") | .id'`
          echo "finished_status_id=`echo ${FINISHED_STATUS_ID}" >> $GITHUB_OUTPUT

  pending-backlog:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    needs:
      - get-status-list
    steps:
      - name: Set pending status
        run: |
          curl -X PATCH --data-urlencode 'statusId=${{ needs.get-status-list.outputs.pending_status_id }} ${{ env.BACKLOG_BASE_URL }}/api/v2/issues/${{ steps.get-ticket-name.outputs.issue_id }}?apiKey=${{ env.BACKLOG_KEY }}'

  finish-backlog:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs:
      - get-status-list
    steps:
      - name: Set finished status
        run: |
          echo "merged"
